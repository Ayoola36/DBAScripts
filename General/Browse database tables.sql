DECLARE	@TABLES TABLE
(
		TABLE_ID INT IDENTITY(1, 1) PRIMARY KEY
		,TABLE_NAME NVARCHAR(128) NOT NULL
		,IS_EMPTY VARCHAR(3) NULL
)

INSERT	@TABLES
SELECT	N'[' + TABLE_SCHEMA + N'].[' + TABLE_NAME + N']' AS TABLE_NAME
		,NULL
FROM	INFORMATION_SCHEMA.TABLES
WHERE	TABLE_TYPE = 'BASE TABLE'

DECLARE	@TABLE_ID INT
		,@MAX_TABLE_ID INT
		,@SQL NVARCHAR(255)
		,@PARM_DEFINITION NVARCHAR(255)
		,@IS_EMPTY BIT

SELECT	@TABLE_ID = 1
		,@MAX_TABLE_ID = MAX(TABLE_ID)
		,@PARM_DEFINITION = N'@IS_EMPTY BIT OUTPUT'
FROM	@TABLES

WHILE	@TABLE_ID <= @MAX_TABLE_ID
BEGIN
		SELECT	@SQL = N'IF EXISTS (SELECT TOP 1 * FROM ' + TABLE_NAME + ') SET @IS_EMPTY = 0 ELSE SET @IS_EMPTY = 1'
		FROM	@TABLES
		WHERE	TABLE_ID = @TABLE_ID

		EXEC	sp_executesql
				@SQL
				,@PARM_DEFINITION
				,@IS_EMPTY = @IS_EMPTY OUTPUT

		UPDATE	@TABLES
		SET		IS_EMPTY = CASE @IS_EMPTY WHEN 0 THEN 'No' ELSE 'Yes' END
		WHERE	TABLE_ID = @TABLE_ID

		SET		@TABLE_ID = @TABLE_ID + 1
END

-- 1 List empty tables
SELECT TABLE_NAME
FROM	@TABLES
WHERE	IS_EMPTY = 'Yes'
ORDER BY TABLE_NAME



-- 2 Step through non-empty tables
DECLARE	@NonEmptyTablesList TABLE
		(ID INT IDENTITY(1, 1), TableName NVARCHAR(128))
INSERT	@NonEmptyTablesList
SELECT	TABLE_NAME
FROM	@TABLES
WHERE	IS_EMPTY = 'No'
ORDER BY
		TABLE_NAME



DECLARE	@MinID INT, @MaxID INT

SELECT	@MinID = MIN([ID])
		,@MaxID = MAX(ID)
FROM	@NonEmptyTablesList

WHILE @MinID <= @MaxID
BEGIN

SELECT	CAST(@MinID AS VARCHAR) + ' / ' + CAST(@MaxID AS VARCHAR) AS Progress
		,TableName
FROM	@NonEmptyTablesList
WHERE	ID = @MinID

SELECT	@SQL = N'SELECT COUNT(*) as TotalRows FROM ' + TableName + ' ; SELECT TOP 1 * FROM ' + TableName 
FROM	@NonEmptyTablesList
WHERE	ID = @MinID

EXEC	(@SQL)

SET @MinID = @MinID + 1

END
